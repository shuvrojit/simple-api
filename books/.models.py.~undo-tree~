(undo-tree-save-format-version . 1)
"12872dc4e7fb0f9c6343b3c972cd72ed40652995"
[nil nil nil nil (25329 7588 544935 916000) 0 nil]
([nil nil ((58 . 59) (t 25329 682 751260 138000) 58) nil (25329 7588 544932 21000) 0 nil])
([nil nil ((59 . 70)) nil (25329 7588 544925 759000) 0 nil])
([nil nil ((#("django" 0 6 (ws-butler-chg chg fontified t)) . -64) (undo-tree-id27 . -6) (undo-tree-id28 . -1) (undo-tree-id29 . -2) (undo-tree-id30 . -1) (undo-tree-id31 . -3) (undo-tree-id32 . -2) (undo-tree-id33 . -4) (undo-tree-id34 . -3) (undo-tree-id35 . -5) (undo-tree-id36 . -4) (undo-tree-id37 . -6) (undo-tree-id38 . -5) (undo-tree-id39 . -6) (undo-tree-id40 . -6) 70) nil (25329 7588 544916 215000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 58) (59 . 59) (#("from " 0 4 (face tree-sitter-hl-face:keyword ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t)) . -59) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -1) (undo-tree-id5 . -3) (undo-tree-id6 . -2) (undo-tree-id7 . -4) (undo-tree-id8 . -3) (undo-tree-id9 . -4) (undo-tree-id10 . -5) (undo-tree-id11 . -4) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) 64) nil (25329 7588 544849 752000) 0 nil])
([nil nil ((58 . 59) 64 (t 25329 7588 542783 211000)) nil (25329 7600 21312 781000) 0 nil])
([nil nil ((59 . 62) (t 25329 7588 542783 211000)) nil (25329 7600 21310 56000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified nil)) . 64) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (62 . 66)) nil (25329 7600 21304 804000) 0 nil])
([nil nil ((171 . 174) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -171) (undo-tree-id44 . -1) 172 (168 . 172) (#("h" 0 1 (ws-butler-chg chg fontified t)) . -168) (undo-tree-id45 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -169) (undo-tree-id46 . -1) 170 (162 . 170) (161 . 162) (160 . 161) (159 . 161) (#("(" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) ws-butler-chg chg fontified nil)) . -159) (140 . 160) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -140) (undo-tree-id47 . -1) 141 (140 . 141) (#("=" 0 1 (face tree-sitter-hl-face:operator ws-butler-chg chg fontified t)) . -140) (undo-tree-id48 . -1) 141 (140 . 141) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -140) (undo-tree-id49 . -1) (#("-" 0 1 (face tree-sitter-hl-face:operator ws-butler-chg chg fontified t)) . -141) (undo-tree-id50 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator ws-butler-chg chg fontified t)) . -142) (undo-tree-id51 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -143) (undo-tree-id52 . -1) 144 (134 . 144) (129 . 134) (124 . 128) (114 . 124) (113 . 115) (#("(" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) ws-butler-chg chg fontified nil)) . -113) (103 . 114) (89 . 103) (84 . 89) (83 . 84) (77 . 82) (70 . 77) (69 . 71) (#("(" 0 1 (face tree-sitter-hl-face:constructor ws-butler-chg chg fontified nil)) . -69) (69 . 70) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -69) (undo-tree-id53 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . -70) (undo-tree-id54 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t)) . 71) (70 . 72) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -70) (65 . 71) (t 25329 7600 13173 235000) (64 . 65) (t 25329 7600 13173 235000)) nil (25329 7762 476573 118000) 0 nil])
([nil nil ((108 . 109) (#("f" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method\.call tree-sitter-hl-face:property) ws-butler-chg chg fontified t)) . 108)) nil (25329 7762 476536 42000) 0 nil])
([nil nil ((129 . 134) (t 25329 7762 478692 343000) 108) nil (25329 7829 716182 722000) 0 nil])
([nil nil ((134 . 155)) nil (25329 7829 716180 794000) 0 nil])
([nil nil ((162 . 174) (161 . 163) (#("(" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) ws-butler-chg chg fontified nil)) . -161) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (155 . 162)) nil (25329 7829 716178 865000) 0 nil])
([nil nil ((174 . 177)) nil (25329 7829 716172 800000) 0 nil])
([nil nil ((#("-" 0 1 (face tree-sitter-hl-face:operator ws-butler-chg chg fontified t)) . -176) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 177) nil (25329 7829 716167 223000) 0 nil])
([nil nil ((223 . 228) (t 25329 7829 720974 69000) 222) nil (25329 7846 514063 497000) 0 nil])
([nil nil ((228 . 231)) nil (25329 7846 514057 427000) 0 nil])
([nil nil ((251 . 253) (#("(" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) ws-butler-chg chg fontified nil)) . -251) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (231 . 252)) nil (25329 7846 514051 145000) 0 nil])
([nil nil ((252 . 265)) nil (25329 7846 514029 907000) 0 nil])
([nil nil ((265 . 266)) nil (25329 7846 514022 837000) 0 nil])
([nil nil ((263 . 265) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -263) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -264) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -265) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 266 (t 25329 7846 521543 961000)) nil (25329 7865 94617 901000) 0 nil])
([nil nil ((266 . 271) 264) nil (25329 7865 94591 808000) 0 nil])
([nil nil ((271 . 282)) nil (25329 7865 94589 663000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . 303) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (302 . 303) (301 . 303) (#("(" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) ws-butler-chg chg fontified nil)) . -301) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (282 . 302)) nil (25329 7865 94583 954000) 0 nil])
([nil nil ((305 . 309) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 304) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (303 . 309) (t 25329 7865 102174 152000)) nil (25329 7876 26153 442000) 0 nil])
([nil nil ((322 . 323) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified nil)) . 322) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (321 . 322) (320 . 322) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -320) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (309 . 321)) nil (25329 7876 26145 304000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 324) (325 . 325) (#("        " 0 8 (ws-butler-chg chg fontified t)) . 324) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (323 . 332)) nil (25329 7876 26134 282000) 0 nil])
([nil nil ((324 . 332) 323 (t 25329 7876 32544 829000)) nil (25329 7891 324635 703000) 0 nil])
([nil nil ((323 . 325) (321 . 323) (t 25329 7876 32544 829000)) nil (25329 7891 324633 857000) 0 nil])
([nil nil ((327 . 336) 324) nil (25329 7891 324632 62000) 0 nil])
([nil nil ((336 . 353)) nil (25329 7891 324630 603000) 0 nil])
([nil nil ((355 . 359) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 354) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (353 . 359)) nil (25329 7891 324628 176000) 0 nil])
([nil current ((#("


" 0 1 (ws-butler-chg delete fontified t) 1 2 (fontified t) 2 3 (ws-butler-chg chg fontified nil)) . 354) (357 . 357) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 356) (undo-tree-id104 . -8) (undo-tree-id105 . -8) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 355) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (368 . 369) 359) nil (25329 7891 324615 863000) 0 nil])
nil
